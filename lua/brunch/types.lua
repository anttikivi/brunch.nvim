-- Credit: https://github.com/catppuccin/nvim

---@class Brunch
---@field options BrunchOptions?
---@field setup fun(opts: BrunchOptions?)

---@alias BrunchVariant 'sunday' | 'saturday'
---@alias BrunchColor 'rosewater' | 'flamingo' | 'pink' | 'mauve' | 'red' | 'maroon' | 'peach' | 'yellow' | 'green' | 'teal' | 'sky' | 'sapphire' | 'blue' | 'lavender' | 'text' | 'subtext1' | 'subtext0' | 'overlay2' | 'overlay1' | 'overlay0' | 'surface2' | 'surface1' | 'surface0' | 'base' | 'mantle' | 'crust'
---@class BrunchVariants<T>: { all: T, sunday: T, saturday: T }
---@class BrunchColors<T>: { rosewater: T, flamingo: T, pink: T, mauve: T, red: T, maroon: T, peach: T, yellow: T, green: T, teal: T, sky: T, sapphire: T, blue: T, lavender: T, text: T, subtext1: T, subtext0: T, overlay2: T, overlay1: T, overlay0: T, surface2: T, surface1: T, surface0: T, base: T, mantle: T, crust: T, none: T }

---@class BrunchOptions
-- Changes the variant based on the background. See `:h background` for more info.
---@field background BrunchBackground?
---- The directory where the cache is stored.
---@field compile_path string?
-- Toggle the `~` characters after the end of buffers.
---@field show_end_of_buffer boolean?
-- If true, sets terminal colors (e.g. `g:terminal_color_0`).
---@field term_colors boolean?
-- Disables all bold styles.
---@field no_bold boolean?
-- Disables all underline styles.
---@field no_underline boolean?
-- Handles the style of general hl groups (see `:h highlight-groups`).
---@field styles BrunchStyles?
-- Toggle integrations. Integrations allow Brunch to set the theme of various plugins.
---@field integrations BrunchIntegrations?
---- Brunch colours to overwrite.
---@field color_overrides BrunchColors | BrunchVariants<BrunchColors<string>> | nil
---- Brunch hghlights to overwrite.
---@field highlight_overrides BrunchHighlightOverrides?
---- The default variant to use on startup.
---@field variant BrunchVariant?

---@class BrunchBackground
-- Brunch variant to use when `:set background=dark` is set.
---@field dark BrunchVariant?
-- Brunch variant to use when `:set background=light` is set.
---@field light BrunchVariant?

---@class BrunchStyles
-- Change the style of comments.
---@field comments BrunchHighlightArgs[]?
-- Change the style of conditionals.
---@field conditionals BrunchHighlightArgs[]?
-- Change the style of loops.
---@field loops BrunchHighlightArgs[]?
-- Change the style of functions.
---@field functions BrunchHighlightArgs[]?
-- Change the style of keywords.
---@field keywords BrunchHighlightArgs[]?
-- Change the style of strings.
---@field strings BrunchHighlightArgs[]?
-- Change the style of variables.
---@field variables BrunchHighlightArgs[]?
-- Change the style of numbers.
---@field numbers BrunchHighlightArgs[]?
-- Change the style of booleans.
---@field booleans BrunchHighlightArgs[]?
-- Change the style of properties.
---@field properties BrunchHighlightArgs[]?
-- Change the style of types.
---@field types BrunchHighlightArgs[]?
-- Change the style of operators.
---@field operators BrunchHighlightArgs[]?

---@class BrunchNativeLspStyles
-- Change the style of LSP errors.
---@field errors BrunchHighlightArgs[]?
-- Change the style of LSP hints.
---@field hints BrunchHighlightArgs[]?
-- Change the style of LSP warnings.
---@field warnings BrunchHighlightArgs[]?
-- Change the style of LSP information.
---@field information BrunchHighlightArgs[]?

---@class BrunchNativeLspInlayHints
-- Toggle the background of inlay hints.
---@field background boolean?

---@class BrunchIntegrations
---@field cmp boolean?
---@field dashboard boolean?
---@field flash boolean?
---@field gitsigns boolean?
---@field harpoon boolean?
---@field headlines boolean?
---@field indent_blankline BrunchIntegrationIndentBlankline | boolean?
---@field leap boolean?
---@field lsp_trouble boolean?
---@field mason boolean?
---@field markdown boolean?
---@field mini BrunchIntegrationMini | boolean?
---@field native_lsp BrunchIntegrationNativeLsp | boolean?
---@field noice boolean?
---@field notify boolean?
---@field semantic_tokens boolean?
---@field telescope BrunchIntegrationTelescope | boolean?
---@field treesitter boolean?
---@field treesitter_context boolean?
---@field which_key boolean?

---@class BrunchIntegrationIndentBlankline
-- Whether to enable the integration.
---@field enabled boolean
-- Sets the color of the scope line
---@field scope_color BrunchColor?
-- Enables char highlights per indent level.
-- Follow the instructions on the plugins GitHub repo to set it up.
---@field colored_indent_levels boolean?
--
---@class BrunchIntegrationMini
-- Whether to enable the integration.
---@field enabled boolean
-- Sets the color of the scope line
---@field indentscope_color BrunchColor?

---@class BrunchIntegrationNativeLsp
-- Whether to enable the Native LSP integration.
---@field enabled boolean
-- Styles to apply to virtual text.
---@field virtual_text BrunchNativeLspStyles?
-- Styles to apply to underlines.
---@field underlines BrunchNativeLspStyles?
-- Inlay hints options.
---@field inlay_hints BrunchNativeLspInlayHints?

---@class BrunchIntegrationTelescope
-- Whether to enable the telescope integration
---@field enabled boolean?
-- The style of Telescope
---@field style 'classic' | nil

---@alias BrunchHighlightArgs 'bold' | 'underline' | 'undercurl' | 'underdouble' | 'underdotted' | 'underdashed' | 'strikethrough' | 'reverse' | 'inverse' | 'italic' | 'standout' | 'altfont' | 'nocombine' | 'NONE'
---@alias BrunchHighlightOverrideFn fun(colors: BrunchColors<string>): { [string]: BrunchHighlight}
---@alias BrunchHighlightOverrides BrunchVariants<BrunchHighlightOverrideFn>

---@class BrunchHighlight
---@field fg string?
---@field bg string?
---@field style BrunchHighlightArgs[]?
---@field link string?
